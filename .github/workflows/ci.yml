name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'  # Ensure job runs weekly to test nightly/beta/stable

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: ./build-all.sh
      - name: Archive lm3s6965 image
        uses: actions/upload-artifact@v4
        with:
          name: lm3s6965-image-pinned
          path: |
            target/thumbv7m-none-eabi/debug/lilos-testsuite-lm3s6965

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: ./doc-all.sh

  test_qemu:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
      - name: Install qemu tool
        run: |
          sudo apt-get update
          sudo apt-get install qemu-system-arm
      - run: >
          qemu-system-arm
          -cpu cortex-m3
          -machine lm3s6965evb
          -nographic
          -semihosting-config enable=on,target=native
          -kernel lm3s6965-image-pinned/lilos-testsuite-lm3s6965

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: ./clippy-all.sh

  build_future:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly
          #- beta  TODO: re-enable once beta stops being broken, first release
          #after 11 September should do it
    steps:
      - uses: actions/checkout@v4
      - run: rm rust-toolchain.toml
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }} && rustup target add thumbv7em-none-eabihf thumbv7m-none-eabi thumbv6m-none-eabi
      - run: ./build-all.sh
      - name: Archive lm3s6965 image
        uses: actions/upload-artifact@v4
        with:
          name: lm3s6965-image-${{ matrix.toolchain }}
          path: |
            target/thumbv7m-none-eabi/debug/lilos-testsuite-lm3s6965

  test_qemu_future:
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly
          # - beta TODO: re-enable, see above
    needs: build_future
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
      - name: Install qemu tool
        run: |
          sudo apt-get update
          sudo apt-get install qemu-system-arm
      - run: >
          qemu-system-arm
          -cpu cortex-m3
          -machine lm3s6965evb
          -nographic
          -semihosting-config enable=on,target=native
          -kernel lm3s6965-image-${{ matrix.toolchain }}/lilos-testsuite-lm3s6965

  clippy_future:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly
          # - beta TODO: re-enable, see above
    steps:
      - uses: actions/checkout@v4
      - run: rm rust-toolchain.toml
      - run: rustup update ${{ matrix.toolchain}} && rustup default ${{ matrix.toolchain }} && rustup target add thumbv7em-none-eabihf thumbv7m-none-eabi thumbv6m-none-eabi && rustup component add clippy
      - run: ./clippy-all.sh

  check_msrv_all:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
              ~/.cargo/bin/
              ~/.cargo/registry/index/
              ~/.cargo/registry/cache/
              ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - run: ./msrv-all.sh

  build_riscv:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - nightly
        target:
          - riscv32imac-unknown-none-elf
          - riscv64gc-unknown-none-elf
    steps:
      - uses: actions/checkout@v4
      - run: rm rust-toolchain.toml
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }} && rustup target add ${{ matrix.target }} && rustup component add rust-src --toolchain ${{ matrix.toolchain }}-x86_64-unknown-linux-gnu
      - run: ./testsuite/riscv-virt/build.sh ${{ matrix.target }}
      - name: Archive riscv-virt-${{ matrix.target}}  image
        uses: actions/upload-artifact@v4
        with:
          name: riscv-image-${{ matrix.toolchain }}-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/debug/lilos-testsuite-riscv-virt


  test_qemu_riscv:
    needs: build_riscv
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
      - name: Install qemu riscv simulators
        run: |
          sudo apt-get update
          sudo apt-get install qemu-system-misc
      - run: >
          qemu-system-riscv32
          -machine virt
          -nographic
          -semihosting-config enable=on,target=native
          -bios riscv-image-nightly-riscv32imac-unknown-none-elf/lilos-testsuite-riscv-virt
      - run: >
          qemu-system-riscv64
          -machine virt
          -nographic
          -semihosting-config enable=on,target=native
          -bios riscv-image-nightly-riscv64gc-unknown-none-elf/lilos-testsuite-riscv-virt

